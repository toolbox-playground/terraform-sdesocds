name: Terraform Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name:  Checkout do Repositório
        uses: actions/checkout@v4

      - name:  Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name:  Configurar Credenciais AWS
        run: |
          echo "Configuração das credenciais AWS..."
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "region=${{ secrets.AWS_REGION }}" > ~/.aws/config
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}

      - name:  Validar Código Terraform
        run: |
          echo " Verificando formatação do código Terraform..."
          terraform fmt -check -diff || echo " Formatação incorreta! Execute 'terraform fmt' para corrigir."

          echo " Validando a configuração do Terraform..."
          terraform validate -no-color || echo " Erro na validação! Corrija os problemas antes de continuar."

      - name:  Instalar TFLint
        run: |
          echo " Instalando TFLint..."
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      - name:  Executar TFLint
        run: |
          echo " Executando TFLint para verificar melhores práticas..."
          tflint --init
          tflint --format compact || echo " Erros encontrados pelo TFLint! Corrija antes de continuar."

      - name:  Inicializar Terraform (init)
        run: terraform init

      - name:  Criar Plano (Terraform Plan)
        run: terraform plan -out=tfplan

      - name:  Aplicação (Terraform Apply) - Requer Aprovação
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
